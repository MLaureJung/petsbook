// je mets un style général à ma div entourant mes sections ainsi qu'a toutes mes sections. Les sections seront chacune en position relative, et ainsi les illustrations pourront être placées en position absolues sur mes sections.
//Ensuite j'applique un style sur chaque div (chaque illustration), le placement sur la page, mais aussi un calcul de la width et height au besoin. Seules les illustrations animées ne peuvent pas encore être adaptées en taille ici, elles le seront dans le JS. 
#timeline-glimpse__container {
    position: relative;
}
.timeline-glimpse {
    background-color: $color-green;
    overflow-x: hidden;
    width: 100vw;
    &__section {
        position: relative;
        height: 700px;
        &__pic {
            position: absolute; 
            max-width: 100%;
            width: 650px;
            height: 400px;
            top: 150px;
            left: 50%;
            margin-left: -325px;
            border-radius: 20px;
            box-shadow: 0px 0px 67px 10px rgba(0,0,0,0.75);
            &__calage {
                position: relative; 
                width: 100%;
                height: 100%;
                .timeline-glimpse__section__date {
                    position: absolute; 
                    top: -45px;
                    right: 0px;
                    width: 100px;
                    height: 30px;
                    line-height: 30px;
                    border-radius: 20px;
                    background-color: $color-blue;
                    opacity: 0.9;
                    box-shadow: 0px 0px 67px 10px rgba(0,0,0,0.4);
                    text-align: center;
                    color: white; 
                }
                .timeline-glimpse__section__text {
                    position: absolute; 
                    top: calc(100% + 15px);
                    left: Opx;
                    width: 100%;
                    min-height: 10px;
                    padding: 5px;
                    border-radius: 20px;
                    background-color: $color-blue;
                    opacity: 0.9;
                    box-shadow: 0px 0px 67px 10px rgba(0,0,0,0.4);
                    text-align: center;
                    color: white; 
                }
            }    
            
        }
        &__element {
            position: absolute; 
        }
    }
    #timeline__raccoon {
        background: url('../assets/images/racoon.png') no-repeat top center;
        background-size: cover;
        opacity: 0;
        animation: raccoon_appear 1s forwards;
        // animation-delay: 0.5s;
        width: 70px;
        height: 111px;
        position: fixed;
        top: calc(50% - 55px);
        left: calc(50% - 35px);
    }
    .scroll_fallen_objects {
        opacity: 0;
        transform: translate3d(0, -100px, 0);
        transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; 

    }
    .scroll_fallen_objects_animate {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
    .timeline-glimpse__section__pic {
        opacity: 0;
        transform: translate3d(0, 100px, 0);
        transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; 

    }
    .timeline-glimpse__section__pic_animate {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }

    .scroll_expand_objects {
        opacity: 0;
        transform : scale(0.5, 0.5);
        transition: all 0.5s ease-in-out; 
    }
    .scroll_expand_objects_animate {
        opacity: 1;
        transform: scale(1,1);
    }

    .scroll_door_open {
        margin-left: 60px!important;
        transition: all 0.5s ease-in-out; 
    }
    .scroll_door_open_animate {
        margin-left: -58px!important;

    }
}

#timeline-glimpse__overview {
    position: absolute;
    top: 0;
    left: 0;
    background-color: transparent;
    .timeline-glimpse__section__intro {
        background-color: transparent; 
    }




}

@keyframes raccoon_appear {
    from {
      opacity: 0; 
      transform: translate3d(0, -100px, 0); 
    }
  
    to {
        opacity: 1; 
        transform: translate3d(0, 0, 0);       
    }
  }